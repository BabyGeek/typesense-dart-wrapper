// Mocks generated by Mockito 5.4.4 from annotations
// in typesense_search/test/services/typesense_search_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i26;
import 'dart:core' hide override;
import 'dart:core' as _i25;

import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i27;
import 'package:typesense/src/alias.dart' as _i14;
import 'package:typesense/src/aliases.dart' as _i4;
import 'package:typesense/src/client.dart' as _i24;
import 'package:typesense/src/collection.dart' as _i13;
import 'package:typesense/src/collections.dart' as _i3;
import 'package:typesense/src/configuration.dart' as _i2;
import 'package:typesense/src/debug.dart' as _i7;
import 'package:typesense/src/document.dart' as _i21;
import 'package:typesense/src/documents.dart' as _i17;
import 'package:typesense/src/health.dart' as _i9;
import 'package:typesense/src/key.dart' as _i15;
import 'package:typesense/src/keys.dart' as _i5;
import 'package:typesense/src/metrics.dart' as _i10;
import 'package:typesense/src/models/models.dart' as _i20;
import 'package:typesense/src/multi_search.dart' as _i12;
import 'package:typesense/src/operations.dart' as _i11;
import 'package:typesense/src/override.dart' as _i22;
import 'package:typesense/src/overrides.dart' as _i18;
import 'package:typesense/src/preset.dart' as _i16;
import 'package:typesense/src/presets.dart' as _i6;
import 'package:typesense/src/stats.dart' as _i8;
import 'package:typesense/src/synonym.dart' as _i23;
import 'package:typesense/src/synonyms.dart' as _i19;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeConfiguration_0 extends _i1.SmartFake implements _i2.Configuration {
  _FakeConfiguration_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCollections_1 extends _i1.SmartFake implements _i3.Collections {
  _FakeCollections_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAliases_2 extends _i1.SmartFake implements _i4.Aliases {
  _FakeAliases_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeKeys_3 extends _i1.SmartFake implements _i5.Keys {
  _FakeKeys_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePresets_4 extends _i1.SmartFake implements _i6.Presets {
  _FakePresets_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDebug_5 extends _i1.SmartFake implements _i7.Debug {
  _FakeDebug_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeStats_6 extends _i1.SmartFake implements _i8.Stats {
  _FakeStats_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeHealth_7 extends _i1.SmartFake implements _i9.Health {
  _FakeHealth_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMetrics_8 extends _i1.SmartFake implements _i10.Metrics {
  _FakeMetrics_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeOperations_9 extends _i1.SmartFake implements _i11.Operations {
  _FakeOperations_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMultiSearch_10 extends _i1.SmartFake implements _i12.MultiSearch {
  _FakeMultiSearch_10(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCollection_11 extends _i1.SmartFake implements _i13.Collection {
  _FakeCollection_11(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAlias_12 extends _i1.SmartFake implements _i14.Alias {
  _FakeAlias_12(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeKey_13 extends _i1.SmartFake implements _i15.Key {
  _FakeKey_13(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePreset_14 extends _i1.SmartFake implements _i16.Preset {
  _FakePreset_14(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDocuments_15 extends _i1.SmartFake implements _i17.Documents {
  _FakeDocuments_15(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeOverrides_16 extends _i1.SmartFake implements _i18.Overrides {
  _FakeOverrides_16(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSynonyms_17 extends _i1.SmartFake implements _i19.Synonyms {
  _FakeSynonyms_17(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSchema_18 extends _i1.SmartFake implements _i20.Schema {
  _FakeSchema_18(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUpdateSchema_19 extends _i1.SmartFake implements _i20.UpdateSchema {
  _FakeUpdateSchema_19(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDocument_20 extends _i1.SmartFake implements _i21.Document {
  _FakeDocument_20(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeOverride_21 extends _i1.SmartFake implements _i22.Override {
  _FakeOverride_21(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSynonym_22 extends _i1.SmartFake implements _i23.Synonym {
  _FakeSynonym_22(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [Client].
///
/// See the documentation for Mockito's code generation for more information.
class MockClient extends _i1.Mock implements _i24.Client {
  MockClient() {
    _i1.throwOnMissingStub(this);
  }

  @_i25.override
  _i2.Configuration get config => (super.noSuchMethod(
        Invocation.getter(#config),
        returnValue: _FakeConfiguration_0(
          this,
          Invocation.getter(#config),
        ),
      ) as _i2.Configuration);

  @_i25.override
  _i3.Collections get collections => (super.noSuchMethod(
        Invocation.getter(#collections),
        returnValue: _FakeCollections_1(
          this,
          Invocation.getter(#collections),
        ),
      ) as _i3.Collections);

  @_i25.override
  _i4.Aliases get aliases => (super.noSuchMethod(
        Invocation.getter(#aliases),
        returnValue: _FakeAliases_2(
          this,
          Invocation.getter(#aliases),
        ),
      ) as _i4.Aliases);

  @_i25.override
  _i5.Keys get keys => (super.noSuchMethod(
        Invocation.getter(#keys),
        returnValue: _FakeKeys_3(
          this,
          Invocation.getter(#keys),
        ),
      ) as _i5.Keys);

  @_i25.override
  _i6.Presets get presets => (super.noSuchMethod(
        Invocation.getter(#presets),
        returnValue: _FakePresets_4(
          this,
          Invocation.getter(#presets),
        ),
      ) as _i6.Presets);

  @_i25.override
  _i7.Debug get debug => (super.noSuchMethod(
        Invocation.getter(#debug),
        returnValue: _FakeDebug_5(
          this,
          Invocation.getter(#debug),
        ),
      ) as _i7.Debug);

  @_i25.override
  _i8.Stats get stats => (super.noSuchMethod(
        Invocation.getter(#stats),
        returnValue: _FakeStats_6(
          this,
          Invocation.getter(#stats),
        ),
      ) as _i8.Stats);

  @_i25.override
  _i9.Health get health => (super.noSuchMethod(
        Invocation.getter(#health),
        returnValue: _FakeHealth_7(
          this,
          Invocation.getter(#health),
        ),
      ) as _i9.Health);

  @_i25.override
  _i10.Metrics get metrics => (super.noSuchMethod(
        Invocation.getter(#metrics),
        returnValue: _FakeMetrics_8(
          this,
          Invocation.getter(#metrics),
        ),
      ) as _i10.Metrics);

  @_i25.override
  _i11.Operations get operations => (super.noSuchMethod(
        Invocation.getter(#operations),
        returnValue: _FakeOperations_9(
          this,
          Invocation.getter(#operations),
        ),
      ) as _i11.Operations);

  @_i25.override
  _i12.MultiSearch get multiSearch => (super.noSuchMethod(
        Invocation.getter(#multiSearch),
        returnValue: _FakeMultiSearch_10(
          this,
          Invocation.getter(#multiSearch),
        ),
      ) as _i12.MultiSearch);

  @_i25.override
  _i13.Collection collection(String? collectionName) => (super.noSuchMethod(
        Invocation.method(
          #collection,
          [collectionName],
        ),
        returnValue: _FakeCollection_11(
          this,
          Invocation.method(
            #collection,
            [collectionName],
          ),
        ),
      ) as _i13.Collection);

  @_i25.override
  _i14.Alias alias(String? aliasName) => (super.noSuchMethod(
        Invocation.method(
          #alias,
          [aliasName],
        ),
        returnValue: _FakeAlias_12(
          this,
          Invocation.method(
            #alias,
            [aliasName],
          ),
        ),
      ) as _i14.Alias);

  @_i25.override
  _i15.Key key(int? id) => (super.noSuchMethod(
        Invocation.method(
          #key,
          [id],
        ),
        returnValue: _FakeKey_13(
          this,
          Invocation.method(
            #key,
            [id],
          ),
        ),
      ) as _i15.Key);

  @_i25.override
  _i16.Preset preset(String? presetName) => (super.noSuchMethod(
        Invocation.method(
          #preset,
          [presetName],
        ),
        returnValue: _FakePreset_14(
          this,
          Invocation.method(
            #preset,
            [presetName],
          ),
        ),
      ) as _i16.Preset);
}

/// A class which mocks [Collection].
///
/// See the documentation for Mockito's code generation for more information.
class MockCollection extends _i1.Mock implements _i13.Collection {
  MockCollection() {
    _i1.throwOnMissingStub(this);
  }

  @_i25.override
  _i17.Documents get documents => (super.noSuchMethod(
        Invocation.getter(#documents),
        returnValue: _FakeDocuments_15(
          this,
          Invocation.getter(#documents),
        ),
      ) as _i17.Documents);

  @_i25.override
  _i18.Overrides get overrides => (super.noSuchMethod(
        Invocation.getter(#overrides),
        returnValue: _FakeOverrides_16(
          this,
          Invocation.getter(#overrides),
        ),
      ) as _i18.Overrides);

  @_i25.override
  _i19.Synonyms get synonyms => (super.noSuchMethod(
        Invocation.getter(#synonyms),
        returnValue: _FakeSynonyms_17(
          this,
          Invocation.getter(#synonyms),
        ),
      ) as _i19.Synonyms);

  @_i25.override
  _i26.Future<_i20.Schema> retrieve() => (super.noSuchMethod(
        Invocation.method(
          #retrieve,
          [],
        ),
        returnValue: _i26.Future<_i20.Schema>.value(_FakeSchema_18(
          this,
          Invocation.method(
            #retrieve,
            [],
          ),
        )),
      ) as _i26.Future<_i20.Schema>);

  @_i25.override
  _i26.Future<_i20.UpdateSchema> update(_i20.UpdateSchema? schema) =>
      (super.noSuchMethod(
        Invocation.method(
          #update,
          [schema],
        ),
        returnValue: _i26.Future<_i20.UpdateSchema>.value(_FakeUpdateSchema_19(
          this,
          Invocation.method(
            #update,
            [schema],
          ),
        )),
      ) as _i26.Future<_i20.UpdateSchema>);

  @_i25.override
  _i26.Future<_i20.Schema> delete() => (super.noSuchMethod(
        Invocation.method(
          #delete,
          [],
        ),
        returnValue: _i26.Future<_i20.Schema>.value(_FakeSchema_18(
          this,
          Invocation.method(
            #delete,
            [],
          ),
        )),
      ) as _i26.Future<_i20.Schema>);

  @_i25.override
  _i21.Document document(String? documentId) => (super.noSuchMethod(
        Invocation.method(
          #document,
          [documentId],
        ),
        returnValue: _FakeDocument_20(
          this,
          Invocation.method(
            #document,
            [documentId],
          ),
        ),
      ) as _i21.Document);

  @_i25.override
  _i22.Override override(String? overrideId) => (super.noSuchMethod(
        Invocation.method(
          #override,
          [overrideId],
        ),
        returnValue: _FakeOverride_21(
          this,
          Invocation.method(
            #override,
            [overrideId],
          ),
        ),
      ) as _i22.Override);

  @_i25.override
  _i23.Synonym synonym(String? synonymId) => (super.noSuchMethod(
        Invocation.method(
          #synonym,
          [synonymId],
        ),
        returnValue: _FakeSynonym_22(
          this,
          Invocation.method(
            #synonym,
            [synonymId],
          ),
        ),
      ) as _i23.Synonym);
}

/// A class which mocks [Documents].
///
/// See the documentation for Mockito's code generation for more information.
class MockDocuments extends _i1.Mock implements _i17.Documents {
  MockDocuments() {
    _i1.throwOnMissingStub(this);
  }

  @_i25.override
  _i26.Future<Map<String, dynamic>> create(
    Map<String, dynamic>? document, {
    Map<String, dynamic>? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #create,
          [document],
          {#options: options},
        ),
        returnValue:
            _i26.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i26.Future<Map<String, dynamic>>);

  @_i25.override
  _i26.Future<Map<String, dynamic>> upsert(
    Map<String, dynamic>? document, {
    Map<String, dynamic>? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #upsert,
          [document],
          {#options: options},
        ),
        returnValue:
            _i26.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i26.Future<Map<String, dynamic>>);

  @_i25.override
  _i26.Future<Map<String, dynamic>> update(
    Map<String, dynamic>? document, {
    Map<String, dynamic>? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #update,
          [document],
          {#options: options},
        ),
        returnValue:
            _i26.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i26.Future<Map<String, dynamic>>);

  @_i25.override
  _i26.Future<Map<String, dynamic>> delete(
          Map<String, String>? queryParameters) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [queryParameters],
        ),
        returnValue:
            _i26.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i26.Future<Map<String, dynamic>>);

  @_i25.override
  _i26.Future<List<Map<String, dynamic>>> importDocuments(
    List<Map<String, dynamic>>? documents, {
    Map<String, dynamic>? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #importDocuments,
          [documents],
          {#options: options},
        ),
        returnValue: _i26.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i26.Future<List<Map<String, dynamic>>>);

  @_i25.override
  _i26.Future<String> importJSONL(
    String? jsonl, {
    Map<String, dynamic>? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #importJSONL,
          [jsonl],
          {#options: options},
        ),
        returnValue: _i26.Future<String>.value(_i27.dummyValue<String>(
          this,
          Invocation.method(
            #importJSONL,
            [jsonl],
            {#options: options},
          ),
        )),
      ) as _i26.Future<String>);

  @_i25.override
  _i26.Future<String> exportJSONL({Map<String, dynamic>? queryParams}) =>
      (super.noSuchMethod(
        Invocation.method(
          #exportJSONL,
          [],
          {#queryParams: queryParams},
        ),
        returnValue: _i26.Future<String>.value(_i27.dummyValue<String>(
          this,
          Invocation.method(
            #exportJSONL,
            [],
            {#queryParams: queryParams},
          ),
        )),
      ) as _i26.Future<String>);

  @_i25.override
  _i26.Future<Map<String, dynamic>> search(
          Map<String, dynamic>? searchParameters) =>
      (super.noSuchMethod(
        Invocation.method(
          #search,
          [searchParameters],
        ),
        returnValue:
            _i26.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i26.Future<Map<String, dynamic>>);
}
